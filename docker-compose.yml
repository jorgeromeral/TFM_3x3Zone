version: "3.8"

services:
  frontend:
    build: ./front-end
    container_name: frontend
    ports:
      - "80:80"
    networks:
      - app-network

  eureka-server:
    build: ./eureka
    container_name: eureka-server
    ports:
      - "8761:8761"
    networks:
      - app-network

  gateway:
    build: ./gatewayACL
    container_name: gateway
    ports:
      - "8762:8762"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka
    depends_on:
      - eureka-server
    networks:
      - app-network

  ms-books-catalogue:
    build: ./ms-books-catalogue
    container_name: ms-books-catalogue
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka
    depends_on:
      - eureka-server
      - elasticsearch
    networks:
      - app-network
    ports:
      - "8080:8080"

  ms-books-payments:
    build: ./ms-books-payments
    container_name: ms-books-payments
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka
    depends_on:
      - eureka-server
    networks:
      - app-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.10
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    networks:
      - app-network
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1" ]
      interval: 30s
      retries: 5

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.10
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - app-network
networks:
  app-network:
    driver: bridge